[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=20]
code = "shader_type spatial;

uniform float min_height;
uniform float max_height;
uniform sampler2D height_color;

varying float height;

void vertex () {
	height = length(VERTEX);
}

void fragment () {
	float t = height / (max_height - min_height) - (min_height / (max_height - min_height));
	vec3 color = texture(height_color, vec2(t, 0.0)).rgb;
	ALBEDO = color;
}"

[sub_resource type="Gradient" id=22]
offsets = PoolRealArray( 0, 0.0923695, 0.170683, 0.562249, 0.805221 )
colors = PoolColorArray( 0.162791, 0.705669, 1, 1, 0.863281, 0.803509, 0.624191, 1, 0.139551, 1, 0.0422833, 1, 0.549908, 0.550781, 0.543795, 1, 0.69774, 0.698075, 0.699219, 1 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 22 )
width = 128

[resource]
shader = SubResource( 20 )
shader_param/min_height = 4.378
shader_param/max_height = 6.31824
shader_param/height_color = SubResource( 21 )
